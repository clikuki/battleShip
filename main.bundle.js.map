{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://battleship/./src/js/createElement.js","webpack://battleship/./src/js/gameboard.js","webpack://battleship/./src/js/modal.js","webpack://battleship/./src/js/player.js","webpack://battleship/./src/js/render.js","webpack://battleship/./src/js/ship.js","webpack://battleship/webpack/bootstrap","webpack://battleship/webpack/runtime/make namespace object","webpack://battleship/./src/js/main.js"],"sourcesContent":["const createElement = (tag, { props, children } = {}) =>\n{\n\tconst element = document.createElement(tag);\n\n\tif (props)\n\t{\n\t\tfor (const [mainKey, mainValue] of Object.entries(props))\n\t\t{\n\t\t\tif (mainKey === 'style')\n\t\t\t{\n\t\t\t\tfor (const [style, value] of Object.entries(props.style))\n\t\t\t\t{\n\t\t\t\t\telement.style.setProperty(style, value);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (typeof mainValue !== 'function') element.setAttribute(mainKey, mainValue);\n\t\t\telse element[mainKey] = mainValue;\n\t\t}\n\t}\n\n\tif (children && children.length > 0)\n\t{\n\t\telement.append(...children);\n\t}\n\n\treturn element;\n}\n\nmodule.exports = createElement;\n","const { getNewShip } = require('../js/ship');\n\nfunction setShip(type, startIndex, isVertical)\n{\n\tconst ship = getNewShip(type, startIndex, isVertical);\n\n\t// Prevent ship from going over the edge\n\tif ((isVertical && ship.indices.some(index => index >= 100))\n\t\t|| (!isVertical && (startIndex % 10) + ship.length > 10)) return null;\n\n\tfor (const index of ship.indices)\n\t{\n\t\tif (!this.tiles[index]) this.tiles[index] = ship;\n\t\t// Remove previously set tiles\n\t\telse\n\t\t{\n\t\t\tfor (const index of ship.indices)\n\t\t\t{\n\t\t\t\tif (this.tiles[index] === ship)\n\t\t\t\t{\n\t\t\t\t\tthis.tiles[index] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tthis.ships.push(ship);\n\treturn ship;\n}\n\nfunction removeShip(ship)\n{\n\tconst shipContainerIndex = this.ships.findIndex(x => x === ship);\n\tthis.ships.splice(shipContainerIndex, 1);\n\tfor (const index of ship.indices)\n\t{\n\t\tthis.tiles[index] = null;\n\t}\n}\n\nfunction recieveAttack(index)\n{\n\tif (index === undefined) return 'attack index required';\n\tif (this.missedHits.concat(this.shipHits).includes(index)) return 'tile has already been hit';\n\tconst ship = this.tiles[index];\n\n\tif (ship?.hit(index))\n\t{\n\t\tthis.shipHits.push(index);\n\t\tif (ship.isSunk)\n\t\t{\n\t\t\tthis.sunkenShips.push(ship);\n\t\t\tif (this.sunkenShips.length === this.ships.length)\n\t\t\t{\n\t\t\t\tthis.allShipsHaveSunk = true;\n\t\t\t}\n\t\t}\n\t}\n\telse this.missedHits.push(index);\n\n\treturn ship;\n}\n\nconst getNewBoard = () =>\n{\n\tconst tiles = Array.from({ length: 100 }, () => null);\n\n\treturn {\n\t\tallShipsHaveSunk: false,\n\t\tsunkenShips: [],\n\t\ttiles,\n\t\tships: [],\n\t\tmissedHits: [],\n\t\tshipHits: [],\n\t\tsetShip,\n\t\tremoveShip,\n\t\trecieveAttack,\n\t}\n}\n\nmodule.exports = {\n\tgetNewBoard,\n}\n","const createElement = require('./createElement');\n\nconst showModal = () => modalBackdrop.classList.remove('hide');\nconst hideModal = () => modalBackdrop.classList.add('hide');\nconst modalFuncs = {\n\tshow: (allowModalExit, headerTitle, ...bodyContents) =>\n\t{\n\t\tif (!allowModalExit)\n\t\t{\n\t\t\tmodalCloseBtn.remove();\n\t\t\tmodalBackdrop.onclick = null;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tmodal.append(modalCloseBtn);\n\t\t\tmodalBackdrop.onclick = modalFuncs.hide;\n\t\t}\n\n\t\tconst header = createElement('h2', {\n\t\t\tchildren: [\n\t\t\t\theaderTitle,\n\t\t\t],\n\t\t\tprops: {\n\t\t\t\tclass: 'header',\n\t\t\t}\n\t\t})\n\n\t\tconst body = createElement('div', {\n\t\t\tprops: {\n\t\t\t\tclass: 'body',\n\t\t\t},\n\t\t\tchildren: bodyContents,\n\t\t})\n\n\t\tmodalContent.replaceChildren(header, body);\n\t\tdocument.body.append(modalBackdrop);\n\t\tshowModal();\n\t},\n\thide: () =>\n\t{\n\t\thideModal();\n\t},\n};\n\nconst modalCloseBtn = createElement('button', {\n\tprops: {\n\t\tclass: 'modalCloseBtn',\n\t\tonclick: modalFuncs.hide,\n\t},\n})\n\nconst modalContent = createElement('div', {\n\tprops: {\n\t\tclass: 'modalContent',\n\t},\n})\n\nconst modal = createElement('div', {\n\tprops: {\n\t\tclass: 'modal',\n\t\tonclick: (ev) => ev.stopPropagation(),\n\t},\n\tchildren: [\n\t\tmodalCloseBtn,\n\t\tmodalContent,\n\t]\n})\n\nconst modalBackdrop = createElement('div', {\n\tprops: {\n\t\tclass: 'modalBackdrop',\n\t\tonclick: modalFuncs.hide,\n\t},\n\tchildren: [\n\t\tmodal,\n\t]\n})\n\nmodule.exports = modalFuncs;\n","const { getNewBoard } = require('../js/gameboard');\nconst { SHIPTYPES } = require('./ship');\n\nfunction makeMove(attackIndex)\n{\n\tif (typeof attackIndex === 'number')\n\t{\n\t\treturn this.gameboard.recieveAttack(attackIndex);\n\t}\n}\n\nfunction getMove(human)\n{\n\tif (!this.isComputer) return null;\n\tconst allHitTiles = human.gameboard.missedHits.concat(human.gameboard.shipHits);\n\twhile (true)\n\t{\n\t\tconst randTile = Math.floor(Math.random() * 100);\n\t\tif (!allHitTiles.includes(randTile))\n\t\t{\n\t\t\treturn randTile;\n\t\t}\n\t}\n}\n\n// If player is  a computer, then it sets ships on its board\nfunction generateShips()\n{\n\tif (!this.isComputer) return;\n\tfor (const type in SHIPTYPES)\n\t{\n\t\tlet ship;\n\t\twhile (!ship)\n\t\t{\n\t\t\tconst randIndex = Math.floor(Math.random() * 101);\n\t\t\tfor (const isVertical of [false, true])\n\t\t\t{\n\t\t\t\tship = this.gameboard.setShip(type, randIndex, isVertical);\n\t\t\t\tif (ship) break;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction checkWin()\n{\n\tconst ships = this.gameboard.ships;\n\tconst sunkenShips = this.gameboard.sunkenShips;\n\treturn ships.length === sunkenShips.length;\n}\n\nconst getNewPlayer = (isComputer) =>\n{\n\treturn {\n\t\tgameboard: getNewBoard(),\n\t\tisComputer,\n\t\tmakeMove,\n\t\tgetMove,\n\t\tgenerateShips,\n\t\tcheckWin,\n\t}\n}\n\nmodule.exports = {\n\tgetNewPlayer\n}\n","const createElement = require('./createElement');\n\n// Will replace words inside with image of ship\nconst getShipElem = (shipObj) =>\n{\n\tconst startIndex = shipObj.startIndex;\n\tconst orientationClass = shipObj.isVertical ? 'vertical' : 'horizontal';\n\tconst shipElem = createElement('div', {\n\t\tprops: {\n\t\t\t'data-type': shipObj.type,\n\t\t\tclass: `ship ${orientationClass}`,\n\t\t\tstyle: {\n\t\t\t\t'--left': startIndex % 10,\n\t\t\t\t'--top': Math.floor(startIndex / 10),\n\t\t\t\t'--cell-num': shipObj.length,\n\t\t\t}\n\t\t},\n\t})\n\n\treturn shipElem;\n}\n\nconst getGridLayer = (player) =>\n{\n\tconst allHitTiles = player.gameboard.missedHits.concat(player.gameboard.shipHits);\n\tconst cells = Array.from({ length: 100 }, (_, i) =>\n\t{\n\t\tconst cellHasBeenShot = allHitTiles.includes(i);\n\t\tconst cellElem = createElement('div', {\n\t\t\tprops: {\n\t\t\t\tclass: `cell ${cellHasBeenShot ? 'shot' : ''}`,\n\t\t\t}\n\t\t})\n\n\t\treturn cellElem;\n\t})\n\n\tconst grid = createElement('div', {\n\t\tchildren: cells,\n\t\tprops: {\n\t\t\tclass: 'grid',\n\t\t}\n\t});\n\n\treturn {\n\t\tgrid,\n\t\tcells\n\t};\n}\n\nconst getShipLayer = (player) =>\n{\n\tconst shipContainer = createElement('div', {\n\t\tchildren: player.gameboard.ships.map(getShipElem),\n\t\tprops: {\n\t\t\tclass: `ships ${player.isComputer ? 'hide' : ''}`,\n\t\t}\n\t})\n\n\tconst shipElems = shipContainer.children;\n\n\treturn {\n\t\tshipContainer,\n\t\tshipElems,\n\t};\n}\n\nconst getGameboard = (player, containerClasses) =>\n{\n\tconst shipLayer = getShipLayer(player);\n\tconst gridLayer = getGridLayer(player);\n\n\tconst playerContainer = createElement('div', {\n\t\tchildren: [\n\t\t\tshipLayer.shipContainer,\n\t\t\tgridLayer.grid,\n\t\t],\n\t\tprops: {\n\t\t\tclass: containerClasses || '',\n\t\t}\n\t})\n\n\treturn {\n\t\tmainElem: playerContainer,\n\t\t...shipLayer,\n\t\t...gridLayer,\n\t}\n}\n\nmodule.exports = {\n\tgetGameboard,\n\tgetShipElem,\n};\n","const SHIPTYPES = {\n\tCARRIER: 'CARRIER',\n\tBATTLESHIP: 'BATTLESHIP',\n\tDESTROYER: 'DESTROYER',\n\tSUBMARINE: 'SUBMARINE',\n\tPATROLBOAT: 'PATROLBOAT',\n}\n\nconst shipLengths = {\n\tCARRIER: 5,\n\tBATTLESHIP: 4,\n\tDESTROYER: 3,\n\tSUBMARINE: 3,\n\tPATROLBOAT: 2,\n}\n\nfunction hit(index)\n{\n\tif (!this.indices.includes(index)) return false;\n\tthis.hitIndices.push(index);\n\tif (checkIfSunk(this)) this.isSunk = true;\n\treturn true;\n}\n\nconst checkIfSunk = (ship) =>\n{\n\tconst sameLen = ship.indices.length === ship.hitIndices.length;\n\tif (!sameLen) return false;\n\tconst hasAllVals = ship.hitIndices.every(val => ship.indices.includes(val));\n\treturn hasAllVals;\n}\n\nconst getIndices = (type, startIndex, isVertical) =>\n{\n\tconst indices = [];\n\tconst length = shipLengths[type];\n\n\tfor (let i = 0; i < length; i++)\n\t{\n\t\tconst index = startIndex + ((isVertical ? 10 : 1) * i);\n\t\tindices.push(index);\n\t}\n\n\treturn indices;\n};\n\nconst getNewShip = (type, startIndex, isVertical) =>\n{\n\tif (!SHIPTYPES[type]) return null;\n\n\tconst length = shipLengths[type];\n\tconst indices = getIndices(type, startIndex, isVertical);\n\tconst hitIndices = [];\n\n\treturn {\n\t\ttype,\n\t\tlength,\n\t\tisVertical,\n\t\tisSunk: false,\n\t\tstartIndex,\n\t\tindices,\n\t\thitIndices,\n\t\thit,\n\t}\n}\n\nmodule.exports = {\n\tgetNewShip,\n\tSHIPTYPES\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { getNewPlayer } = require('./player');\nconst { SHIPTYPES } = require('./ship');\nconst { getGameboard, getShipElem } = require('./render');\nconst createElement = require('./createElement');\nconst modal = require('./modal');\nrequire('../main.css');\n\nconst setShip = (player, type, startIndex, isVertical) =>\n{\n\tconst shipObj = player.gameboard.setShip(type, startIndex, isVertical);\n\tif (!shipObj) return shipObj;\n\n\tconst shipElem = getShipElem(shipObj);\n\tplayer.elems.shipContainer.append(shipElem);\n\treturn {\n\t\telem: shipElem,\n\t\t...shipObj,\n\t}\n}\n\nconst removeShip = (player, ship) =>\n{\n\tplayer.gameboard.removeShip(ship);\n\tship.elem.remove();\n}\n\nconst setClickEvents = (humanObj, computerObj) =>\n{\n\tconst updateCell = (player, cell, i) =>\n\t{\n\t\tcell.classList.add('shot');\n\t\tconst ship = player.makeMove(i);\n\t\tif (ship)\n\t\t{\n\t\t\tcell.classList.add('hadShip');\n\t\t\tif (player.checkWin())\n\t\t\t{\n\t\t\t\tnodeEventPairs.forEach(([node, cb]) =>\n\t\t\t\t{\n\t\t\t\t\tnode.removeEventListener('click', cb);\n\t\t\t\t})\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tconst nodeEventPairs = computerObj.elems.cells.map((computerCell, i) =>\n\t{\n\t\tconst clickEvent = () =>\n\t\t{\n\t\t\tconst randIndex = computerObj.getMove(humanObj);\n\t\t\tconst playerCell = humanObj.elems.cells[randIndex];\n\n\t\t\t// Only make computer play move if player hasn't already won\n\t\t\tif (updateCell(computerObj, computerCell, i))\n\t\t\t{\n\t\t\t\tdisplayWin(humanObj);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse if (updateCell(humanObj, playerCell, randIndex))\n\t\t\t{\n\t\t\t\tdisplayWin(computerObj);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcomputerCell.removeEventListener('click', clickEvent);\n\t\t}\n\n\t\tcomputerCell.addEventListener('click', clickEvent);\n\t\treturn [computerCell, clickEvent];\n\t})\n}\n\nconst displayWin = (player) =>\n{\n\tmodal.show(\n\t\ttrue, player.isComputer ? 'Game Over!' : 'Congratulations!',\n\t\tcreateElement('p', {\n\t\t\tchildren: [\n\t\t\t\t`You ${(player.isComputer) ?\n\t\t\t\t\t'lost, and you were taken over by the hacker.' :\n\t\t\t\t\t'won against the hacker!'} Try again?`,\n\t\t\t],\n\t\t\tprops: {\n\t\t\t\tclass: 'gameFinish',\n\t\t\t}\n\t\t}),\n\t\tcreateElement('button', {\n\t\t\tprops: {\n\t\t\t\tonclick: startGame,\n\t\t\t},\n\t\t\tchildren: ['Restart'],\n\t\t})\n\t)\n}\n\nconst getShipPositions = async () =>\n{\n\tconst fakePlayer = getNewPlayer(false);\n\tconst fakeBoard = getGameboard(fakePlayer, 'placeShipBoard');\n\tfakePlayer.elems = fakeBoard;\n\tconst ships = [];\n\tlet isVertical = false;\n\n\tconst curShipTypeDisplay = createElement('span', {\n\t\tprops: {\n\t\t\tclass: 'shipTypeDisplay',\n\t\t}\n\t});\n\n\tconst removeListeners = () =>\n\t{\n\t\tfor (const node of fakeBoard.cells)\n\t\t{\n\t\t\tnode.onclick = null;\n\t\t\tnode.onmouseenter = null;\n\t\t\tnode.onmouseleave = null;\n\t\t}\n\t}\n\n\tmodal.show(\n\t\tfalse,\n\t\t'Place your ships!',\n\t\tcurShipTypeDisplay,\n\t\tcreateElement('button', {\n\t\t\t// Btn to toggle between vertical and horizontal\n\t\t\tchildren: [\n\t\t\t\t'Change orientation: False',\n\t\t\t],\n\t\t\tprops: {\n\t\t\t\tclass: 'switchBtn',\n\t\t\t\tonclick: (ev) =>\n\t\t\t\t{\n\t\t\t\t\tisVertical = !isVertical;\n\t\t\t\t\tconst isVerticalStr = isVertical.toString();\n\t\t\t\t\tconst newText = `Change orientation: ${isVerticalStr[0].toUpperCase()}${isVerticalStr.slice(1)}`;\n\t\t\t\t\tev.target.textContent = newText;\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\tfakeBoard.mainElem,\n\t);\n\n\tfor (const type in SHIPTYPES)\n\t{\n\t\tcurShipTypeDisplay.textContent = `Current Ship: ${type}`;\n\n\t\tconst shipParams = await new Promise(resolve =>\n\t\t{\n\t\t\tlet ship;\n\t\t\tfakeBoard.cells.forEach((cell, i) =>\n\t\t\t{\n\t\t\t\tconst clickEvent = () =>\n\t\t\t\t{\n\t\t\t\t\tif (ship) resolve([type, i, isVertical]);\n\t\t\t\t}\n\n\t\t\t\tconst mouseEnterEvent = () =>\n\t\t\t\t{\n\t\t\t\t\tif (ship)\n\t\t\t\t\t{\n\t\t\t\t\t\tremoveShip(fakePlayer, ship)\n\t\t\t\t\t\tship = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tship = setShip(fakePlayer, type, i, isVertical);\n\t\t\t\t}\n\n\t\t\t\tconst mouseLeaveEvent = () =>\n\t\t\t\t{\n\t\t\t\t\tif (!ship) return;\n\t\t\t\t\tremoveShip(fakePlayer, ship)\n\t\t\t\t\tship = null;\n\t\t\t\t}\n\n\t\t\t\tcell.onclick = clickEvent;\n\t\t\t\tcell.onmouseenter = mouseEnterEvent;\n\t\t\t\tcell.onmouseleave = mouseLeaveEvent;\n\t\t\t})\n\t\t});\n\n\t\tships.push(shipParams);\n\t}\n\n\tremoveListeners();\n\tmodal.hide();\n\n\treturn ships;\n}\n\nconst startGame = async () =>\n{\n\tconst gameContainer = document.querySelector('main');\n\tconst humanObj = getNewPlayer(false);\n\tconst computerObj = getNewPlayer(true);\n\thumanObj.elems = getGameboard(humanObj, 'side human');\n\tcomputerObj.elems = getGameboard(computerObj, 'side computer');\n\tgameContainer.replaceChildren(humanObj.elems.mainElem, computerObj.elems.mainElem);\n\n\tconst shipPositions = await getShipPositions();\n\tfor (const [type, startIndex, isVertical] of shipPositions)\n\t{\n\t\tsetShip(humanObj, type, startIndex, isVertical);\n\t}\n\n\tcomputerObj.generateShips();\n\tsetClickEvents(humanObj, computerObj);\n}\n\nwindow.startGame = startGame;\n"],"names":["module","exports","tag","props","children","element","document","createElement","mainKey","mainValue","Object","entries","style","value","setProperty","setAttribute","length","append","getNewShip","setShip","type","startIndex","isVertical","ship","indices","some","index","this","tiles","ships","push","removeShip","shipContainerIndex","findIndex","x","splice","recieveAttack","undefined","missedHits","concat","shipHits","includes","hit","isSunk","sunkenShips","allShipsHaveSunk","getNewBoard","Array","from","modalFuncs","show","allowModalExit","headerTitle","bodyContents","modal","modalCloseBtn","modalBackdrop","onclick","hide","remove","header","class","body","modalContent","replaceChildren","classList","add","ev","stopPropagation","SHIPTYPES","makeMove","attackIndex","gameboard","getMove","human","isComputer","allHitTiles","randTile","Math","floor","random","generateShips","randIndex","checkWin","getNewPlayer","getShipElem","shipObj","orientationClass","getGameboard","player","containerClasses","shipLayer","shipContainer","map","shipElems","getShipLayer","gridLayer","cells","_","i","cellHasBeenShot","grid","getGridLayer","mainElem","CARRIER","BATTLESHIP","DESTROYER","SUBMARINE","PATROLBOAT","shipLengths","hitIndices","checkIfSunk","every","val","getIndices","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","r","Symbol","toStringTag","defineProperty","shipElem","elems","elem","displayWin","startGame","async","gameContainer","querySelector","humanObj","computerObj","shipPositions","fakePlayer","fakeBoard","curShipTypeDisplay","isVerticalStr","toString","newText","toUpperCase","slice","target","textContent","shipParams","Promise","resolve","forEach","cell","onmouseenter","onmouseleave","node","removeListeners","getShipPositions","updateCell","nodeEventPairs","cb","removeEventListener","computerCell","clickEvent","playerCell","addEventListener","setClickEvents","window"],"sourceRoot":""}